{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mo\\\\Desktop\\\\practice1\\\\src\\\\components\\\\Card.js\";\nimport React from 'react';\nimport image from '../image.webp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = () => {\n  // Generate random image URL\n  const getRandomImage = () => {\n    // Replace this logic with your own random image URL generation\n    const randomImageUrls = [image, image, image];\n    const randomIndex = Math.floor(Math.random() * randomImageUrls.length);\n    return randomImageUrls[randomIndex];\n  };\n\n  // Array of card data\n  const cardData = [{\n    name: 'Giraffe 1',\n    message: 'Happy Birthday 1'\n  }, {\n    name: 'Giraffe 2',\n    message: 'Happy Birthday 2'\n  }, {\n    name: 'Giraffe 3',\n    message: 'Happy Birthday 3'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cardData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgBx\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: getRandomImage(),\n              alt: \"Random\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contentBx\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [item.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"sci\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"happy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","image","jsxDEV","_jsxDEV","Card","getRandomImage","randomImageUrls","randomIndex","Math","floor","random","length","cardData","name","message","children","map","item","index","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["C:/Users/Mo/Desktop/practice1/src/components/Card.js"],"sourcesContent":["import React from 'react';\r\nimport image from '../image.webp';\r\n\r\nconst Card = () => {\r\n  // Generate random image URL\r\n  const getRandomImage = () => {\r\n    // Replace this logic with your own random image URL generation\r\n    const randomImageUrls = [image, image, image];\r\n    const randomIndex = Math.floor(Math.random() * randomImageUrls.length);\r\n    return randomImageUrls[randomIndex];\r\n  };\r\n\r\n  // Array of card data\r\n  const cardData = [\r\n    { name: 'Giraffe 1', message: 'Happy Birthday 1' },\r\n    { name: 'Giraffe 2', message: 'Happy Birthday 2' },\r\n    { name: 'Giraffe 3', message: 'Happy Birthday 3' },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      {cardData.map((item, index) => (\r\n        <div className=\"card-container\" >\r\n          <div className=\"card\">\r\n            <div className=\"content\">\r\n              <div className=\"imgBx\">\r\n                <img src={getRandomImage()} alt=\"Random\" />\r\n              </div>\r\n              <div className=\"contentBx\">\r\n                <h3>\r\n                  {item.name}\r\n                  <br />\r\n                  <span>{item.message}</span>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n            <ul className=\"sci\">\r\n              <li>\r\n                <a href=\"#\">happy</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}